{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata';\nimport dotenv from 'dotenv';\ndotenv.config();\nimport express from 'express';\nimport axios from 'axios';\n\n\nconst {\n    BLOG_BASE_URL = 'https://lazai.network/blogs',\n    SOURCE_URL = 'https://raw.githubusercontent.com/0xLazAI/lazai-web-blogs/main/list.json',\n    PORT = 4000,\n} = process.env;\n\nconst SOURCE_CACHE = new Map<string, any>();\n\nconst app = express();\n\napp.get('/', async (req, res) => {\n    return res.redirect(BLOG_BASE_URL);\n});\n\napp.get('/robots.txt', async (req, res) => {\n    return res.send('User-agent: *\\nAllow: /');\n});\n\napp.get('/:target', async (req, res) => {\n    const target = req.params.target as string;\n    console.log('target=', target);\n    if (!target) {\n        return res.status(400).send('Target is required');\n    }\n\n    const userAgent = req.headers['user-agent'] as string;\n    console.log('userAgent=', userAgent);\n\n    // Check if the request is from a browser\n    const isBrowser = userAgent && (\n        userAgent.includes('Mozilla') || // Firefox, Chrome, Safari, etc.\n        userAgent.includes('Safari') ||  // Safari\n        userAgent.includes('Chrome') ||  // Chrome\n        userAgent.includes('Edge') ||    // Microsoft Edge\n        userAgent.includes('Opera')      // Opera\n    );\n\n    if (isBrowser) {\n        return res.redirect(BLOG_BASE_URL + '/' + target);\n    }\n\n    let blog = SOURCE_CACHE.get(target);\n    if (!blog) {\n        const data = await axios.get(SOURCE_URL).then((res) => res.data);\n        for (const i of data.list) {\n            SOURCE_CACHE.set(i.link, i);\n        }\n    }\n\n    blog = SOURCE_CACHE.get(target);\n    console.log('blog=', blog);\n    if (!blog) {\n        return res.redirect(BLOG_BASE_URL + '/' + target);\n    }\n\n    return res.send(render(blog));\n});\n\nfunction render(blog: any) {\n    return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <title>${blog.title}</title>\n        <meta name=\"twitter:title\" content=\"${blog.title}\" />\n        <meta name=\"twitter:description\" content=\"${blog.desc}\" />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"@LazAINetwork\" />\n        <meta name=\"twitter:image\" content=\"${blog.banner}\" />\n        <meta property=\"og:title\" content=\"${blog.title}\" />\n        <meta property=\"og:description\" content=\"${blog.desc}\" />\n        <meta property=\"og:image\" content=\"${blog.banner}\" />\n        <meta property=\"og:url\" content=\"${BLOG_BASE_URL}/${blog.link}\" />\n    </head>\n    <body>\n        <h1>${blog.title}</h1>\n        <p>${blog.desc}</p>\n        <img src=\"${blog.banner}\" alt=\"${blog.title}\">\n        <a href=\"${BLOG_BASE_URL}/${blog.link}\">Read More</a>\n    </body>\n    </html>\n    `;\n}\n\napp.listen(PORT, () => {\n    console.log(`ðŸš€  Server ready at: http://localhost:${PORT}`);\n});\n"]}